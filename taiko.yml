x-logging: &logging
  logging:
    driver: json-file
    options:
      max-size: 100m
      max-file: "3"
      tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'

services:
  l2_execution_engine:
    image: us-docker.pkg.dev/evmchain/images/taiko-geth:${L2_EXECUTION_ENGINE_VERSION}
    restart: unless-stopped
    pull_policy: always
    env_file:
      - .env
    stop_grace_period: 3m
    volumes:
      - l2_execution_engine_data:/data/taiko-geth
    ports:
      - "${PORT_L2_EXECUTION_ENGINE_P2P:-30306}:${PORT_L2_EXECUTION_ENGINE_P2P:-30306}"
      - "${PORT_L2_EXECUTION_ENGINE_P2P:-30306}:${PORT_L2_EXECUTION_ENGINE_P2P:-30306}/udp"
    entrypoint:
      - /bin/sh
      - -c
      - |
        exec geth \
          --taiko \
          --networkid "${CHAIN_ID}" \
          --gcmode archive \
          --datadir /data/taiko-geth \
          --metrics \
          --metrics.addr "0.0.0.0" \
          --bootnodes ${BOOT_NODES} \
          --authrpc.addr "0.0.0.0" \
          --authrpc.vhosts "*" \
          --http \
          --http.api debug,eth,net,web3,txpool,taiko \
          --http.addr "0.0.0.0" \
          --http.vhosts "*" \
          --ws \
          --ws.api debug,eth,net,web3,txpool,taiko \
          --ws.addr "0.0.0.0" \
          --ws.origins "*" \
          --gpo.defaultprice "10000000" \
          --port ${PORT_L2_EXECUTION_ENGINE_P2P:-30306} \
          --discovery.port ${PORT_L2_EXECUTION_ENGINE_P2P:-30306} \
          --maxpeers ${MAXPEERS:-50} \
          --maxpendpeers ${MAXPENDPEERS:-0} \
          ${EXTRA_FLAGS:-}
    <<: *logging
    labels:
      - traefik.enable=true
      - traefik.http.routers.${RPC_HOST}.service=${RPC_HOST}
      - traefik.http.routers.${RPC_HOST}.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST}.rule=Host(`${RPC_HOST}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST}.tls.certresolver=letsencrypt
      - traefik.http.routers.${RPC_HOST}lb.service=${RPC_HOST}
      - traefik.http.routers.${RPC_HOST}lb.entrypoints=websecure
      - traefik.http.routers.${RPC_HOST}lb.rule=Host(`${RPC_LB}.${DOMAIN}`)
      - traefik.http.routers.${RPC_HOST}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${RPC_HOST}.loadbalancer.server.port=${PORT_L2_EXECUTION_ENGINE_HTTP:-8545}
      - traefik.http.routers.${WS_HOST}.service=${WS_HOST}
      - traefik.http.routers.${WS_HOST}.entrypoints=websecure
      - traefik.http.routers.${WS_HOST}.rule=Host(`${WS_HOST}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST}.tls.certresolver=letsencrypt
      - traefik.http.routers.${WS_HOST}lb.service=${WS_HOST}
      - traefik.http.routers.${WS_HOST}lb.entrypoints=websecure
      - traefik.http.routers.${WS_HOST}lb.rule=Host(`${WS_LB}.${DOMAIN}`)
      - traefik.http.routers.${WS_HOST}lb.tls.certresolver=letsencrypt
      - traefik.http.services.${WS_HOST}.loadbalancer.server.port=${PORT_L2_EXECUTION_ENGINE_WS:-8546}
      - metrics.scrape=true
      - metrics.path=/metrics
      - metrics.port=${PORT_L2_EXECUTION_ENGINE_METRICS:-6060}
      - metrics.instance=${RPC_HOST}
      - metrics.network=${RPC_HOST}

  taiko_client_driver:
    image: us-docker.pkg.dev/evmchain/images/taiko-client:${TAIKO_CLIENT_VERSION}
    restart: unless-stopped
    pull_policy: always
    depends_on:
      - l2_execution_engine
    volumes:
      - l2_execution_engine_data:/data/taiko-geth
    entrypoint:
      - /bin/sh
      - -c
      - |
        exec taiko-client driver \
        --l1.ws "${L1_ENDPOINT_WS}" \
        --l2.ws ws://l2_execution_engine:${PORT_L2_EXECUTION_ENGINE_WS:-8546} \
        --l1.beacon "${L1_BEACON_HTTP}" \
        --l2.auth http://l2_execution_engine:8551 \
        --taikoL1 "${TAIKO_L1_ADDRESS}" \
        --taikoL2 "${TAIKO_L2_ADDRESS}" \
        --jwtSecret /data/taiko-geth/geth/jwtsecret \
        --p2p.sync \
        --p2p.checkPointSyncUrl "${P2P_SYNC_URL}"
    <<: *logging

volumes:
  l2_execution_engine_data: